"NeoBundle Scripts-----------------------------
if has('vim_starting')
  if &compatible
    set nocompatible               " Be iMproved
  endif

  " Required:
  set runtimepath+=/home/human/.vim/bundle/neobundle.vim/
endif

" Required:
call neobundle#begin(expand('/home/human/.vim/bundle'))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

" Add or remove your Bundles here:
NeoBundle 'Shougo/vimproc.vim', {
\ 'build' : {
\     'windows' : 'tools\\update-dll-mingw',
\     'cygwin' : 'make -f make_cygwin.mak',
\     'mac' : 'make -f make_mac.mak',
\     'linux' : 'make',
\     'unix' : 'gmake',
\    },
\ }
NeoBundle 'Shougo/neosnippet.vim'
NeoBundle 'Shougo/neosnippet-snippets'
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'ctrlpvim/ctrlp.vim'
NeoBundle 'flazz/vim-colorschemes'
NeoBundle 'scrooloose/nerdtree'
NeoBundle 'morhetz/gruvbox'

" You can specify revision/branch/tag.
NeoBundle 'Shougo/vimshell', { 'rev' : '3787e5' }

" Required:
call neobundle#end()

" Required:
filetype plugin indent on

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck
"End NeoBundle Scripts-------------------------

"Base------------------------------------------
set fileencoding=utf-8
set term=rxvt-unicode-256color
set t_Co=256
set t_ut=
set background=dark
set modeline

let g:CSApprox_loaded = 1
colorscheme jellybeans

set wildmenu
set hidden

set hlsearch

set nobackup
set nowritebackup
set noswapfile

set wiw=100

set ea

autocmd BufWritePost $MYVIMRC so %
"End Base--------------------------------------

"NERDTree--------------------------------------
autocmd VimEnter * :NERDTreeToggle
let g:NERDTreeDirArrows = 0
let g:NERDTreeWinPos = "right"
let g:NERDTreeWinSize = 40

autocmd WinEnter NERD_tree_* setlocal wiw=40
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
"End NERDTree----------------------------------

"Code------------------------------------------
set nu
syntax enable

autocmd WinEnter * if &modifiable | setlocal wiw=100 | endif
autocmd WinEnter * wincmd =

set expandtab
set shiftwidth=2
set softtabstop=2
set colorcolumn=60,80

set nowrap
"End Code--------------------------------------

"Key Bindings----------------------------------
let mapleader = "\<Space>"

nnoremap n nzz
nnoremap N Nzz

noremap <C-h> <C-W>h
noremap <C-j> <C-W>j
noremap <C-k> <C-W>k
noremap <C-l> <C-W>l

nnoremap <Leader>n :NERDTreeToggle<CR>
"End Key Bindings------------------------------
